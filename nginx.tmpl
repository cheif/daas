worker_processes 1;

error_log /var/log/nginx/error.log warn;
pid       /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;

    keepalive_timeout 65;

    server {
        listen 80;
        # This is for setting up letsencrypt
        location /.well-known {
            root /var/www/letsencrypt;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    {% if env.SETUP != 'true' %}
    server {
        listen 443 ssl;

        server_name ~^(www\.)?(?<subdomain>.+?)\.[^.]*\.[^.]*$;
        # $subdomain now contains everything before the domain, including dots
        # we can now use this to proxy-pass to different containers in the docker-network

        ssl_certificate /etc/letsencrypt/live/{{env.DOMAIN_NAME}}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{env.DOMAIN_NAME}}/privkey.pem;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_dhparam /etc/letsencrypt/dhparam.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_stapling on;
        ssl_stapling_verify on;
        add_header Strict-Transport-Security max-age=15768000;

        # Docker has a dns-server on 127.0.0.11 (at least right now), but it doesn't do
        # ipv6
        resolver 127.0.0.11 ipv6=off;
        location / {
            # We require the container to have their service on 8080 or 5000 (for registry)
            proxy_pass http://$subdomain:8080$uri;
        }
    }
    {% endif %}
}
